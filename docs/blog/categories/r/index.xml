<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>pins</title>
    <link>https://rstudio.github.io/pins/blog/</link>
    <atom:link href="https://rstudio.github.io/pins/blog/index.xml" rel="self" type="application/rss+xml"/>
    <description>pins
</description>
    <generator>Distill</generator>
    <lastBuildDate>Fri, 29 May 2020 00:00:00 +0000</lastBuildDate>
    <item>
      <title>pins 0.4: Versioning</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Javier Luraschi</dc:creator>
      <link>https://rstudio.github.io/pins/blog/posts/pins-0-4-0</link>
      <description>


&lt;div class="container-fluid main-container"&gt;




&lt;div class="fluid-row" id="header"&gt;




&lt;/div&gt;


&lt;p&gt;A new version of &lt;code&gt;pins&lt;/code&gt; is available on CRAN today, which adds support for &lt;a href="http://pins.rstudio.com/articles/advanced-versions.html"&gt;versioning&lt;/a&gt; your datasets and &lt;a href="http://pins.rstudio.com/articles/boards-dospace.html"&gt;DigitalOcean Spaces&lt;/a&gt; boards!&lt;/p&gt;
&lt;p&gt;As a quick recap, the pins package allows you to cache, discover and share resources. You can use &lt;code&gt;pins&lt;/code&gt; in a wide range of situations, from downloading a dataset from a URL to creating complex automation workflows (learn more at &lt;a href="https://pins.rstudio.com"&gt;pins.rstudio.com&lt;/a&gt;). You can also use &lt;code&gt;pins&lt;/code&gt; in combination with TensorFlow and Keras; for instance, use &lt;a href="https://tensorflow.rstudio.com/tools/cloudml"&gt;cloudml&lt;/a&gt; to train models in cloud GPUs, but rather than manually copying files into the GPU instance, you can store them as pins directly from R.&lt;/p&gt;
&lt;p&gt;To install this new version of &lt;code&gt;pins&lt;/code&gt; from CRAN, simply run:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;pins&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find a detailed list of improvements in the pins &lt;a href="https://github.com/rstudio/pins/blob/master/NEWS.md"&gt;NEWS&lt;/a&gt; file.&lt;/p&gt;
&lt;div id="versioning" class="section level1"&gt;
&lt;h1&gt;Versioning&lt;/h1&gt;
&lt;p&gt;To illustrate the new versioning functionality, let’s start by downloading and caching a remote dataset with pins. For this example, we will download the weather in London, this happens to be in JSON format and requires &lt;code&gt;jsonlite&lt;/code&gt; to be parsed:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(pins)

weather_url &amp;lt;- &amp;quot;https://samples.openweathermap.org/data/2.5/weather?q=London,uk&amp;amp;appid=b6907d289e10d714a6e88b30761fae22&amp;quot;

pin(weather_url, &amp;quot;weather&amp;quot;) %&amp;gt;%
  jsonlite::read_json() %&amp;gt;%
  as.data.frame()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  coord.lon coord.lat weather.id weather.main     weather.description weather.icon
1     -0.13     51.51        300      Drizzle light intensity drizzle          09d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One advantage of using &lt;code&gt;pins&lt;/code&gt; is that, even if the URL or your internet connection becomes unavailable, the above code will still work.&lt;/p&gt;
&lt;p&gt;But back to &lt;code&gt;pins 0.4&lt;/code&gt;! The new &lt;code&gt;signature&lt;/code&gt; parameter in &lt;code&gt;pin_info()&lt;/code&gt; allows you to retrieve the “version” of this dataset:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_info(&amp;quot;weather&amp;quot;, signature = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# Source: local&amp;lt;weather&amp;gt; [files]
# Signature: 624cca260666c6f090b93c37fd76878e3a12a79b
# Properties:
#   - path: weather&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then validate the remote dataset has not changed by specifying its signature:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin(weather_url, &amp;quot;weather&amp;quot;, signature = &amp;quot;624cca260666c6f090b93c37fd76878e3a12a79b&amp;quot;) %&amp;gt;%
  jsonlite::read_json()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the remote dataset changes, &lt;code&gt;pin()&lt;/code&gt; will fail and you can take the appropriate steps to accept the changes by updating the signature or properly updating your code. The previous example is useful as a way of detecting version changes, but we might also want to retrieve specific versions even when the dataset changes.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pins 0.4&lt;/code&gt; allows you to display and retrieve versions from services like GitHub, Kaggle and RStudio Connect. Even in boards that don’t support versioning natively, you can opt-in by registering a board with &lt;code&gt;versions = TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To keep this simple, let’s focus on GitHub first. We will register a GitHub board and pin a dataset to it. Notice that you can also specify the &lt;code&gt;commit&lt;/code&gt; parameter in GitHub boards as the commit message for this change.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;board_register_github(repo = &amp;quot;javierluraschi/datasets&amp;quot;, branch = &amp;quot;datasets&amp;quot;)

pin(iris, name = &amp;quot;versioned&amp;quot;, board = &amp;quot;github&amp;quot;, commit = &amp;quot;use iris as the main dataset&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now suppose that a colleague comes along and updates this dataset as well:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin(mtcars, name = &amp;quot;versioned&amp;quot;, board = &amp;quot;github&amp;quot;, commit = &amp;quot;slight preference to mtcars&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From now on, your code could be broken or, even worse, produce incorrect results!&lt;/p&gt;
&lt;p&gt;However, since GitHub was designed as a version control system and &lt;code&gt;pins 0.4&lt;/code&gt; adds support for &lt;code&gt;pin_versions()&lt;/code&gt;, we can now explore particular versions of this dataset:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_versions(&amp;quot;versioned&amp;quot;, board = &amp;quot;github&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 2 x 4
  version created              author         message                     
  &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;                &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;                       
1 6e6c320 2020-04-02T21:28:07Z javierluraschi slight preference to mtcars 
2 01f8ddf 2020-04-02T21:27:59Z javierluraschi use iris as the main dataset&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then retrieve the version you are interested in as follows:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_get(&amp;quot;versioned&amp;quot;, version = &amp;quot;01f8ddf&amp;quot;, board = &amp;quot;github&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 150 x 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
          &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  
 1          5.1         3.5          1.4         0.2 setosa 
 2          4.9         3            1.4         0.2 setosa 
 3          4.7         3.2          1.3         0.2 setosa 
 4          4.6         3.1          1.5         0.2 setosa 
 5          5           3.6          1.4         0.2 setosa 
 6          5.4         3.9          1.7         0.4 setosa 
 7          4.6         3.4          1.4         0.3 setosa 
 8          5           3.4          1.5         0.2 setosa 
 9          4.4         2.9          1.4         0.2 setosa 
10          4.9         3.1          1.5         0.1 setosa 
# … with 140 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can follow similar steps for &lt;a href="http://pins.rstudio.com/articles/boards-rsconnect.html"&gt;RStudio Connect&lt;/a&gt; and &lt;a href="http://pins.rstudio.com/articles/boards-kaggle.html"&gt;Kaggle&lt;/a&gt; boards, even for existing pins! Other boards like &lt;a href="http://pins.rstudio.com/articles/boards-s3.html"&gt;Amazon S3&lt;/a&gt;, &lt;a href="http://pins.rstudio.com/articles/boards-gcloud.html"&gt;Google Cloud&lt;/a&gt;, &lt;a href="http://pins.rstudio.com/articles/boards-dospace.html"&gt;Digital Ocean&lt;/a&gt; and &lt;a href="http://pins.rstudio.com/articles/boards-azure.html"&gt;Microsoft Azure&lt;/a&gt; require you explicitly enable versioning when registering your boards.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="digitalocean" class="section level1"&gt;
&lt;h1&gt;DigitalOcean&lt;/h1&gt;
&lt;p&gt;To try out the new &lt;a href="http://pins.rstudio.com/articles/boards-dospace.html"&gt;DigitalOcean Spaces board&lt;/a&gt;, first you will have to register this board and enable versioning by setting &lt;code&gt;versions&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(pins)
board_register_dospace(space = &amp;quot;pinstest&amp;quot;,
                       key = &amp;quot;AAAAAAAAAAAAAAAAAAAA&amp;quot;,
                       secret = &amp;quot;ABCABCABCABCABCABCABCABCABCABCABCABCABCA==&amp;quot;,
                       datacenter = &amp;quot;sfo2&amp;quot;,
                       versions = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then use all the functionality pins provides, including versioning:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# create pin and replace content in digitalocean
pin(iris, name = &amp;quot;versioned&amp;quot;, board = &amp;quot;pinstest&amp;quot;)
pin(mtcars, name = &amp;quot;versioned&amp;quot;, board = &amp;quot;pinstest&amp;quot;)

# retrieve versions from digitalocean
pin_versions(name = &amp;quot;versioned&amp;quot;, board = &amp;quot;pinstest&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 2 x 1
  version
  &amp;lt;chr&amp;gt;  
1 c35da04
2 d9034cd&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that enabling versions in cloud services requires additional storage space for each version of the dataset being stored:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-4-0/images/digitalocean-spaces-pins-versioned.png" style="width:100.0%" /&gt;&lt;/p&gt;
&lt;p&gt;To learn more visit the &lt;a href="http://pins.rstudio.com/articles/advanced-versions.html"&gt;Versioning&lt;/a&gt; and &lt;a href="http://pins.rstudio.com/articles/boards-dospace.html"&gt;DigitalOcean&lt;/a&gt; articles. To catch up with previous releases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pins.rstudio.com/blog/posts/pins-0-3-0/"&gt;pins 0.3&lt;/a&gt;: Azure, GCloud and S3&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rstudio.com/2019/09/09/pin-discover-and-share-resources/"&gt;pins 0.2&lt;/a&gt;: Pin, Discover and Share Resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks for reading along!&lt;/p&gt;
&lt;/div&gt;




&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


&lt;/script&gt;

&lt;!-- tabsets --&gt;

&lt;script&gt;
$(document).ready(function () {
  window.buildTabsets("TOC");
});

$(document).ready(function () {
  $('.tabset-dropdown &gt; .nav-tabs &gt; li').click(function () {
    $(this).parent().toggleClass('nav-tabs-open')
  });
});
&lt;/script&gt;

&lt;!-- code folding --&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
&lt;/script&gt;

</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">f5c4df622861a9699a3936007fe154ec</distill:md5>
      <category>Packages</category>
      <category>Releases</category>
      <category>Versioning</category>
      <category>R</category>
      <guid>https://rstudio.github.io/pins/blog/posts/pins-0-4-0</guid>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rstudio.github.io/pins/blog/posts/pins-0-4-0/images/thumb.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>pins 0.3: Azure, GCloud and S3</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Javier Luraschi</dc:creator>
      <link>https://rstudio.github.io/pins/blog/posts/pins-0-3-0</link>
      <description>


&lt;div class="container-fluid main-container"&gt;




&lt;div class="fluid-row" id="header"&gt;




&lt;/div&gt;


&lt;p&gt;A new version of &lt;code&gt;pins&lt;/code&gt; is available on CRAN! &lt;code&gt;pins 0.3&lt;/code&gt; comes with many improvements and the following major features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for new &lt;strong&gt;cloud boards&lt;/strong&gt; to pin resources in &lt;a href="../../../articles/boards-azure.html"&gt;Azure&lt;/a&gt;, &lt;a href="../../../articles/boards-gcloud.html"&gt;GCloud&lt;/a&gt; and &lt;a href="../../../articles/boards-s3.html"&gt;S3&lt;/a&gt; storage.&lt;/li&gt;
&lt;li&gt;Retrieve &lt;strong&gt;pin information&lt;/strong&gt; with &lt;code&gt;pin_info()&lt;/code&gt; including properties particular to each board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can install this new version from CRAN as follows:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;pins&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In addition, there is a new &lt;a href="https://rstudio.github.io/pins/articles/use-cases.html"&gt;Use Cases&lt;/a&gt; section in our docs, various improvements (see &lt;a href="https://rstudio.github.io/pins/news/index.html"&gt;NEWS&lt;/a&gt;) and two community extensions being developed to support &lt;a href="https://rstudio.github.io/connections/#pins"&gt;databases&lt;/a&gt; and &lt;a href="https://gitlab.com/gwmngilfen/nextcloudr"&gt;Nextcloud&lt;/a&gt; as boards.&lt;/p&gt;
&lt;div id="cloud-boards" class="section level2"&gt;
&lt;h2&gt;Cloud Boards&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pins 0.3&lt;/code&gt; adds support to find, retrieve and store resources in various cloud providers like: &lt;a href="https://azure.microsoft.com/"&gt;Microsoft Azure&lt;/a&gt;, &lt;a href="https://cloud.google.com/"&gt;Google Cloud&lt;/a&gt; and &lt;a href="https://aws.amazon.com/"&gt;Amazon Web Services&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-3-0/images/pins-cloud-boards-azure-gcloud-s3.png" /&gt;&lt;/p&gt;
&lt;p&gt;To illustrate how they work, lets first try to find the World Bank indicators dataset in &lt;a href="https://www.kaggle.com/"&gt;Kaggle&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(pins)
pin_find(&amp;quot;indicators&amp;quot;, board = &amp;quot;kaggle&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 6 x 4
  name                                            description                             type  board 
  &amp;lt;chr&amp;gt;                                           &amp;lt;chr&amp;gt;                                   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; 
1 worldbank/world-development-indicators          World Development Indicators            files kaggle
2 theworldbank/world-development-indicators       World Development Indicators            files kaggle
3 cdc/chronic-disease                             Chronic Disease Indicators              files kaggle
4 bigquery/worldbank-wdi                          World Development Indicators (WDI) Data files kaggle
5 rajanand/key-indicators-of-annual-health-survey Health Analytics                        files kaggle
6 loveall/human-happiness-indicators              Human Happiness Indicators              files kaggle&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can then easily download with &lt;code&gt;pin_get()&lt;/code&gt;, beware this is a 2GB download:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_get(&amp;quot;worldbank/world-development-indicators&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;/.../worldbank/world-development-indicators/Country.csv&amp;quot;     
[2] &amp;quot;/.../worldbank/world-development-indicators/CountryNotes.csv&amp;quot;
[3] &amp;quot;/.../worldbank/world-development-indicators/database.sqlite&amp;quot; 
[4] &amp;quot;/.../worldbank/world-development-indicators/Footnotes.csv&amp;quot;   
[5] &amp;quot;/.../worldbank/world-development-indicators/hashes.txt&amp;quot;      
[6] &amp;quot;/.../worldbank/world-development-indicators/Indicators.csv&amp;quot;  
[7] &amp;quot;/.../worldbank/world-development-indicators/Series.csv&amp;quot;      
[8] &amp;quot;/.../worldbank/world-development-indicators/SeriesNotes.csv&amp;quot; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Indicators.csv&lt;/code&gt; file contains all the indicators, so let’s load it with &lt;a href="https://readr.tidyverse.org/"&gt;readr&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;indicators &amp;lt;- pin_get(&amp;quot;worldbank/world-development-indicators&amp;quot;)[6] %&amp;gt;%
  readr::read_csv()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Analysing this dataset would be quite interesting; however, this post focuses on how to share this in S3, Google Cloud or Azure storage. More specifically, we will learn how to publish to an &lt;a href="../../../articles/boards-s3.html"&gt;S3 board&lt;/a&gt;. To publish to other cloud providers, take a look at the &lt;a href="../../../articles/boards-gcloud.html"&gt;Google Cloud&lt;/a&gt; and &lt;a href="../../../articles/boards-azure.html"&gt;Azure boards&lt;/a&gt; articles.&lt;/p&gt;
&lt;p&gt;As you would expect, the first step is to register the S3 board. When using RStudio, you can use the &lt;a href="../../../articles/pins-rstudio.html"&gt;New Connection&lt;/a&gt; action to guide you through this process, or you can specify your &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; as follows. Please refer to the &lt;a href="../../../articles/boards-s3.html"&gt;S3 board&lt;/a&gt; article to understand how to store your credentials securely.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;board_register_s3(name = &amp;quot;rpins&amp;quot;,
                  bucket  = &amp;quot;rpins&amp;quot;,
                  key = &amp;quot;VerySecretKey&amp;quot;,
                  secret = &amp;quot;EvenMoreImportantSecret&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the S3 board registered, we can now pin the indicators dataset with &lt;code&gt;pin()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin(indicators, name = &amp;quot;worldbank/indicators&amp;quot;, board = &amp;quot;rpins&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s about it! We can now find and retrieve this dataset from S3 using &lt;code&gt;pin_find()&lt;/code&gt;, &lt;code&gt;pin_get()&lt;/code&gt; or view the uploaded resources in the S3 management console:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-3-0/images/pins-upload-s3-results.png" /&gt;&lt;/p&gt;
&lt;p&gt;To make this even easier for others to consume, we can make this S3 bucket public; which means you can now connect to this board without even having to configure S3, making it possible to retrieve this dataset with just one line of R code!&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pins::pin_get(&amp;quot;worldbank/indicators&amp;quot;, &amp;quot;https://rpins.s3.amazonaws.com&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 5,656,458 x 6
   CountryName CountryCode IndicatorName                          IndicatorCode    Year      Value
   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;                                  &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
 1 Arab World  ARB         Adolescent fertility rate (births per… SP.ADO.TFRT      1960    1.34e+2
 2 Arab World  ARB         Age dependency ratio (% of working-ag… SP.POP.DPND      1960    8.78e+1
 3 Arab World  ARB         Age dependency ratio, old (% of worki… SP.POP.DPND.OL   1960    6.63e+0
 4 Arab World  ARB         Age dependency ratio, young (% of wor… SP.POP.DPND.YG   1960    8.10e+1
 5 Arab World  ARB         Arms exports (SIPRI trend indicator v… MS.MIL.XPRT.KD   1960    3.00e+6
 6 Arab World  ARB         Arms imports (SIPRI trend indicator v… MS.MIL.MPRT.KD   1960    5.38e+8
 7 Arab World  ARB         Birth rate, crude (per 1,000 people)   SP.DYN.CBRT.IN   1960    4.77e+1
 8 Arab World  ARB         CO2 emissions (kt)                     EN.ATM.CO2E.KT   1960    5.96e+4
 9 Arab World  ARB         CO2 emissions (metric tons per capita) EN.ATM.CO2E.PC   1960    6.44e-1
10 Arab World  ARB         CO2 emissions from gaseous fuel consu… EN.ATM.CO2E.GF…  1960    5.04e+0
# … with 5,656,448 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This works since &lt;code&gt;pins 0.3&lt;/code&gt; automatically register URLs as a &lt;a href="../../../articles/boards-websites.html"&gt;website board&lt;/a&gt; to save you from having to explicitly call &lt;code&gt;board_register_datatxt()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It’s also worth mentioning that &lt;code&gt;pins&lt;/code&gt; stores the dataset using an R native format, which requires only 72MB and loads much faster than the original 2GB dataset.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="pin-information" class="section level2"&gt;
&lt;h2&gt;Pin Information&lt;/h2&gt;
&lt;p&gt;Boards like &lt;a href="../../../articles/boards-kaggle.html"&gt;Kaggle&lt;/a&gt; and &lt;a href="../../../articles/boards-rsconnect.html"&gt;RStudio Connect&lt;/a&gt;, store additional information for each pin which you can now easily retrieve with &lt;code&gt;pin_info()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For instance, we can retrieve additional properties from the indicators pin from Kaggle as follows,&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_info(&amp;quot;worldbank/world-development-indicators&amp;quot;, board = &amp;quot;kaggle&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# Source: kaggle&amp;lt;worldbank/world-development-indicators&amp;gt; [files]
# Description: World Development Indicators
# Properties:
#   - id: 23
#   - subtitle: Explore country development indicators from around the world
#   - tags: (ref) business, economics, international relations, business finance...
#   - creatorName: Megan Risdal
#   - creatorUrl: mrisdal
#   - totalBytes: 387054886
#   - url: https://www.kaggle.com/worldbank/world-development-indicators
#   - lastUpdated: 2017-05-01T17:50:44.863Z
#   - downloadCount: 42961
#   - isPrivate: FALSE
#   - isReviewed: TRUE
#   - isFeatured: FALSE
#   - licenseName: World Bank Dataset Terms of Use
#   - ownerName: World Bank
#   - ownerRef: worldbank
#   - kernelCount: 422
#   - topicCount: 7
#   - viewCount: 254379
#   - voteCount: 1121
#   - currentVersionNumber: 2
#   - usabilityRating: 0.7647
#   - extension: zip&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And from RStudio Connect boards as well,&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_info(&amp;quot;worldnews&amp;quot;, board = &amp;quot;rsconnect&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# Source: rsconnect&amp;lt;jluraschi/worldnews&amp;gt; [table]
# Properties:
#   - id: 6446
#   - guid: 1b9f04c5-ddd4-43ca-8352-98f6f01a7034
#   - access_type: all
#   - url: https://beta.rstudioconnect.com/content/6446/
#   - vanity_url: FALSE
#   - bundle_id: 16216
#   - app_mode: 4
#   - content_category: pin
#   - has_parameters: FALSE
#   - created_time: 2019-09-30T18:20:21.911777Z
#   - last_deployed_time: 2019-11-18T16:00:16.919478Z
#   - build_status: 2
#   - run_as_current_user: FALSE
#   - owner_first_name: Javier
#   - owner_last_name: Luraschi
#   - owner_username: jluraschi
#   - owner_guid: ac498f34-174c-408f-8089-a9f10c630a37
#   - owner_locked: FALSE
#   - is_scheduled: FALSE
#   - rows: 44
#   - cols: 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To retrieve all the extended information when discovering pins, pass &lt;code&gt;extended = TRUE&lt;/code&gt; to &lt;code&gt;pin_find()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thank you for reading this post!&lt;/p&gt;
&lt;p&gt;Please refer to &lt;a href="https://rstudio.github.io/pins"&gt;rstudio.github.io/pins&lt;/a&gt; for detailed documentation, &lt;a href="https://github.com/rstudio/pins/issues/new"&gt;GitHub&lt;/a&gt; to file issues or feature requests and &lt;a href="https://gitter.im/rstudio/pins"&gt;Gitter&lt;/a&gt; to chat with us about anything else.&lt;/p&gt;
&lt;/div&gt;




&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


&lt;/script&gt;

&lt;!-- tabsets --&gt;

&lt;script&gt;
$(document).ready(function () {
  window.buildTabsets("TOC");
});

$(document).ready(function () {
  $('.tabset-dropdown &gt; .nav-tabs &gt; li').click(function () {
    $(this).parent().toggleClass('nav-tabs-open')
  });
});
&lt;/script&gt;

&lt;!-- code folding --&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
&lt;/script&gt;

</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">c36bd621a4b04a4dcf4e9c96354e0598</distill:md5>
      <category>Packages</category>
      <category>Releases</category>
      <category>Cloud</category>
      <category>R</category>
      <guid>https://rstudio.github.io/pins/blog/posts/pins-0-3-0</guid>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>pins: Pin, Discover and Share Resources</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Javier Luraschi</dc:creator>
      <link>https://rstudio.github.io/pins/blog/posts/pins-0-2-0</link>
      <description>


&lt;div class="container-fluid main-container"&gt;




&lt;div class="fluid-row" id="header"&gt;




&lt;/div&gt;


&lt;p&gt;Today we are excited to announce the &lt;a href="https://github.com/rstudio/pins"&gt;pins&lt;/a&gt; package is available on CRAN! &lt;code&gt;pins&lt;/code&gt; allows you to &lt;strong&gt;pin&lt;/strong&gt;, &lt;strong&gt;discover&lt;/strong&gt; and &lt;strong&gt;share&lt;/strong&gt; remote &lt;strong&gt;resources&lt;/strong&gt;, locally or in remote storage.&lt;/p&gt;
&lt;p&gt;If you find yourself using &lt;code&gt;download.file()&lt;/code&gt; or asking others to download files before running your R code, use &lt;code&gt;pin()&lt;/code&gt; to achieve fast, simple and reliable reproducible research over remote resources.&lt;/p&gt;
&lt;div id="pins" class="section level2"&gt;
&lt;h2&gt;Pins&lt;/h2&gt;
&lt;p&gt;You can use the &lt;code&gt;pins&lt;/code&gt; package to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pin&lt;/strong&gt; remote resources locally to work offline and cache results with ease, &lt;code&gt;pin()&lt;/code&gt; stores resources in boards which you can then retrieve with &lt;code&gt;pin_get()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discover&lt;/strong&gt; new resources across different boards using &lt;code&gt;pin_find()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Share&lt;/strong&gt; resources on GitHub, Kaggle or RStudio Connect by registering new boards with &lt;code&gt;board_register()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resources&lt;/strong&gt; can be anything from CSV, JSON, or image files to arbitrary R objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can install &lt;code&gt;pins&lt;/code&gt; from CRAN with:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;pins&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can &lt;strong&gt;pin&lt;/strong&gt; remote files with &lt;code&gt;pin(url)&lt;/code&gt;. &lt;code&gt;pin(url)&lt;/code&gt; downloads and caches the remote &lt;code&gt;url&lt;/code&gt;, returning the path to the locally cached file. This gives you the ability to work offline (or continue working even if the remote resource disappears) with minimal changes to your existing code. When called again in the future, &lt;code&gt;pin()&lt;/code&gt; will automatically check for changes, and only re-download the file if needed.&lt;/p&gt;
&lt;p&gt;For instance, the following example makes use of a remote CSV file, which you can download and cache with &lt;code&gt;pin()&lt;/code&gt; before it’s loaded with &lt;code&gt;read_csv()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)
library(pins)

url &amp;lt;- &amp;quot;https://raw.githubusercontent.com/facebook/prophet/master/examples/example_retail_sales.csv&amp;quot;
retail_sales &amp;lt;- read_csv(pin(url))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 293 x 2
   ds              y
   &amp;lt;date&amp;gt;      &amp;lt;dbl&amp;gt;
 1 1992-01-01 146376
 2 1992-02-01 147079
 3 1992-03-01 159336
 4 1992-04-01 163669
 5 1992-05-01 170068
 6 1992-06-01 168663
 7 1992-07-01 169890
 8 1992-08-01 170364
 9 1992-09-01 164617
10 1992-10-01 173655
# … with 283 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This makes reading subsequent remotes files orders of magnitude faster, files are only downloaded when the remote resource changes.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;pins&lt;/code&gt; package allows you to &lt;strong&gt;discover&lt;/strong&gt; remote resources using &lt;code&gt;pin_find()&lt;/code&gt;, currently, it can search resources in CRAN packages, Kaggle and RStudio Connect. For instance, we can search resources mentioning “seattle” in CRAN packages as follows:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_find(&amp;quot;seattle&amp;quot;, board = &amp;quot;packages&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 6 x 4
  name                description                                        type  board 
  &amp;lt;chr&amp;gt;               &amp;lt;chr&amp;gt;                                              &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; 
1 hpiR/ex_sales       Subset of Seattle Home Sales from hpiR package.    table packa…
2 hpiR/seattle_sales  Seattle Home Sales from hpiR package.              table packa…
3 latticeExtra/Seata… Daily Rainfall and Temperature at the Seattle-Tac… table packa…
4 microsynth/seattle… Data for a crime intervention in Seattle, Washing… table packa…
5 vegawidget/data_se… Example dataset: Seattle daily weather from vegaw… table packa…
6 vegawidget/data_se… Example dataset: Seattle hourly temperatures from… table packa…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that all pins are referenced as &lt;code&gt;&amp;lt;owner&amp;gt;/&amp;lt;name&amp;gt;&lt;/code&gt; and even if the &lt;code&gt;&amp;lt;owner&amp;gt;&lt;/code&gt; is not provided, each board will assign an appropriate one. While you can ignore &lt;code&gt;&amp;lt;owner&amp;gt;&lt;/code&gt; and reference pins by &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, this can fail in some boards if different owners assign the same name to a pin.&lt;/p&gt;
&lt;p&gt;You can then retrieve a pin as a local path through &lt;code&gt;pin_get()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;pin_get(&amp;quot;hpiR/seattle_sales&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 43,313 x 16
   pinx  sale_id sale_price sale_date  use_type  area lot_sf  wfnt bldg_grade tot_sf
   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;      &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt;
 1 ..00… 2013..…     289000 2013-02-06 sfr         79   9295     0          7   2560
 2 ..00… 2013..…     356000 2013-07-11 sfr         18   6000     0          6   1540
 3 ..00… 2010..…     333500 2010-12-29 sfr         79   7200     0          8   2380
 4 ..00… 2016..…     577200 2016-03-17 sfr         79   7200     0          8   2380
 5 ..00… 2012..…     237000 2012-05-02 sfr         79   5662     0          7   1370
 6 ..00… 2014..…     347500 2014-03-11 sfr         79   5830     0          7    880
 7 ..00… 2012..…     429000 2012-09-20 sfr         18  12700     0          7   1640
 8 ..00… 2015..…     653295 2015-07-21 sfr         79   7000     0          7   1990
 9 ..00… 2014..…     427650 2014-02-19 townhou…    79   3072     0          7   1980
10 ..00… 2015..…     488737 2015-03-19 townhou…    79   3072     0          7   1980
# … with 43,303 more rows, and 6 more variables: beds &amp;lt;int&amp;gt;, baths &amp;lt;dbl&amp;gt;,
#   age &amp;lt;int&amp;gt;, eff_age &amp;lt;int&amp;gt;, longitude &amp;lt;dbl&amp;gt;, latitude &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, you can also &lt;strong&gt;share&lt;/strong&gt; resources with other R sessions and other users by publishing to a local folder, Kaggle, GitHub and RStudio Connect.&lt;/p&gt;
&lt;p&gt;To publish resources in Kaggle, you would first need to register the Kaggle board by creating a &lt;a href="https://www.kaggle.com/me/account"&gt;Kaggle API Token&lt;/a&gt;, and then publishing to Kaggle by storing a pin in the ‘kaggle’ board:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;board_register_kaggle(token = &amp;quot;&amp;lt;path-to-kaggle.json&amp;gt;&amp;quot;)

pin_get(&amp;quot;hpiR/seattle_sales&amp;quot;) %&amp;gt;%
  pin(name = &amp;quot;seattle_sales&amp;quot;, board = &amp;quot;kaggle&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are other boards you can use or even create custom boards as described in the &lt;a href="https://rstudio.github.io/pins/articles/boards-understanding.html"&gt;Understanding Boards&lt;/a&gt; article; in addition, &lt;code&gt;pins&lt;/code&gt; can also be used with RStudio products which we will describe next.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="rstudio" class="section level2"&gt;
&lt;h2&gt;RStudio&lt;/h2&gt;
&lt;p&gt;You can use &lt;a href="https://www.rstudio.com/products/rstudio/"&gt;RStudio&lt;/a&gt; and &lt;a href="https://www.rstudio.com/products/connect/"&gt;RStudio Connect&lt;/a&gt; to discover and share content within your organization with ease.&lt;/p&gt;
&lt;p&gt;To enable new boards, like Kaggle and RStudio Connect, you can use &lt;a href="https://blog.rstudio.com/2017/08/16/rstudio-preview-connections/"&gt;RStudio’s Data Connections&lt;/a&gt; to create a new ‘pins’ connection, which provides you access to many boards:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-2-0/images/2019-09-09-rstudio-connect-board.png" style="width:60.0%" /&gt;&lt;/p&gt;
&lt;p&gt;Once connected, you can use the connections pane to track the pins you own and preview them with ease. Notice that one connection is created for each board.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-2-0/images/2019-09-09-rstudio-explore-pins.png" style="width:60.0%" /&gt;&lt;/p&gt;
&lt;p&gt;To &lt;strong&gt;discover&lt;/strong&gt; remote resources, simply expand the “Addins” menu and select “Find Pin” from the dropdown. This addin allows you to search for pins across all boards, or scope your search to particular ones as well:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-2-0/images/2019-09-09-rstudio-discover-pins.png" style="width:60.0%" /&gt;&lt;/p&gt;
&lt;p&gt;You can then &lt;strong&gt;share&lt;/strong&gt; local resources using the RStudio Connect board. Lets use &lt;code&gt;dplyr&lt;/code&gt; and the &lt;code&gt;hpiR_seattle_sales&lt;/code&gt; pin to analyze this further and then pin our results in RStudio Connect.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;board_register_rsconnect()

pin_get(&amp;quot;hpiR/seattle_sales&amp;quot;) %&amp;gt;%
  group_by(baths = ceiling(baths)) %&amp;gt;%
  summarise(sale = floor(mean(sale_price))) %&amp;gt;%
  pin(&amp;quot;sales-by-baths&amp;quot;, board = &amp;quot;rsconnect&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After a pin is published, you can then browse to the pin’s content from the RStudio Connect web interface.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-2-0/images/2019-09-09-rstudio-share-resources.png" style="width:60.0%" /&gt;&lt;/p&gt;
&lt;p&gt;You can now set the appropriate permissions in RStudio Connect, and voila! From now on, those with access can make use of this remote pin locally!&lt;/p&gt;
&lt;p&gt;For instance, a colleague can reuse the &lt;code&gt;sales-by-baths&lt;/code&gt; pin by retrieving it from RStudio Connect and visualize its contents using &lt;code&gt;ggplot2&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(pins)
board_register_rsconnect()

pin_get(&amp;quot;sales-by-baths&amp;quot;) %&amp;gt;%
  ggplot(aes(x = baths, y = sale)) +
    geom_point() + geom_smooth(method = &amp;#39;lm&amp;#39;, formula = y ~ exp(x))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://rstudio.github.io/pins/blog//posts/pins-0-2-0/images/2019-09-09-rstudio-reuse-pin-ggplot2.png" height="280" /&gt;&lt;/p&gt;
&lt;p&gt;Pins can also be automated using scheduled R Markdown. This makes it much easier to create Shiny applications that rely on scheduled data updates or to share prepared resources across multiple pieces of content. You no longer have to fuss with file paths on RStudio Connect, mysterious resource URLs, or redeploying application code just to update a dataset!&lt;/p&gt;
&lt;p&gt;Experimental support for &lt;code&gt;pins&lt;/code&gt; will be introduced in an upcoming release, stay tuned for RStudio Connect 1.7.8!&lt;/p&gt;
&lt;p&gt;Please also make sure to &lt;del&gt;pin&lt;/del&gt; visit, &lt;a href="https://rstudio.github.io/pins"&gt;rstudio.github.io/pins&lt;/a&gt;, where you can find detailed documentation and additional resources. Thanks!&lt;/p&gt;
&lt;/div&gt;




&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


&lt;/script&gt;

&lt;!-- tabsets --&gt;

&lt;script&gt;
$(document).ready(function () {
  window.buildTabsets("TOC");
});

$(document).ready(function () {
  $('.tabset-dropdown &gt; .nav-tabs &gt; li').click(function () {
    $(this).parent().toggleClass('nav-tabs-open')
  });
});
&lt;/script&gt;

&lt;!-- code folding --&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
&lt;/script&gt;

</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">d599914b545890e2e646d7eb8a185a45</distill:md5>
      <category>Packages</category>
      <category>Introductions</category>
      <category>Releases</category>
      <category>R</category>
      <guid>https://rstudio.github.io/pins/blog/posts/pins-0-2-0</guid>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
